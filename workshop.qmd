---
title: ""
format:
  html:
    include-after-body: 
      - contact-card.html
    anchor-sections: false
    toc: true
    toc-depth: 2
    toc-location: left
    toc-title: "On this page:"
    other-links:
      - text: NASA Open Data
        href: https://data.nasa.gov/
    code-links:
      - text: Data Import Code
        icon: file-code
        href: data-import.py
code-annotations: hover
code-link: true
---

<!-- Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

# Workshops and teaching 

Lorem ipsum odor amet, consectetuer adipiscing elit. Quam nullam pretium malesuada potenti commodo rutrum molestie tincidunt sodales. Risus nulla dui faucibus odio est phasellus tempus. Sollicitudin dapibus nunc ex congue nostra sapien velit. Praesent pellentesque vitae sociosqu orci magnis habitant maximus metus quisque. Velit tempus ad sodales hac; suspendisse suscipit.

Faucibus accumsan ipsum et tempor fringilla placerat nisl ultrices. Suscipit dignissim finibus platea efficitur inceptos consequat orci sem. Himenaeos adipiscing ultrices ex; rutrum dignissim turpis. Libero sociosqu lacinia nibh; potenti elit viverra. Senectus fames fringilla praesent nascetur lacus lobortis dui tortor. Felis ridiculus lorem senectus convallis conubia nec phasellus nisi. Potenti sodales rhoncus et penatibus auctor morbi erat augue iaculis. Egestas dictumst phasellus class nec facilisis sapien lectus maximus iaculis. Quam nascetur fusce vivamus proin dolor; magna tempus curae.

- Motivation

- Bilingual ... as a consequence of time constraints ... 



# ***Methods*** {#methods}

Libero sociosqu lacinia nibh; potenti elit viverra. Senectus fames fringilla praesent nascetur lacus lobortis dui tortor. Felis ridiculus lorem senectus convallis conubia nec phasellus nisi. Potenti sodales rhoncus et penatibus auctor morbi erat augue iaculis. Egestas dictumst phasellus class nec facilisis sapien lectus maximus iaculis. Quam nascetur fusce vivamus proin dolor; magna tempus curae.

## Descriptive statistics [*en*] {#descriptive}

Faucibus accumsan ipsum et tempor fringilla placerat nisl ultrices. Suscipit dignissim finibus platea efficitur inceptos consequat orci sem. 


```{r}
#| child: "workshop/descriptive-stat.qmd"
```

## Regression [*en*] {#regression}

Faucibus accumsan ipsum et tempor fringilla placerat nisl ultrices. Suscipit dignissim finibus platea efficitur inceptos consequat orci sem. 

```{r}
#| child: "workshop/regression.qmd"
```

## Segregation Indices [*da*] {#segregation}

Faucibus accumsan ipsum et tempor fringilla placerat nisl ultrices. Suscipit dignissim finibus platea efficitur inceptos consequat orci sem. 

```{r}
#| child: "workshop/segregation.qmd"
```

## Decomposition [*en*] {#decomposition}

Faucibus accumsan ipsum et tempor fringilla placerat nisl ultrices. Suscipit dignissim finibus platea efficitur inceptos consequat orci sem. 

```{r}
#| child: "workshop/decomposition.qmd"
```

## SNA and VNA [*da*] {#sna}

Faucibus accumsan ipsum et tempor fringilla placerat nisl ultrices. Suscipit dignissim finibus platea efficitur inceptos consequat orci sem. 

```{r}
#| child: "workshop/sna-vna.qmd"
```

## Spatial stuff [*en*] {#spatial}

Faucibus accumsan ipsum et tempor fringilla placerat nisl ultrices. Suscipit dignissim finibus platea efficitur inceptos consequat orci sem. 

```{r}
#| child: "workshop/spatial.qmd"
```





















# ***Machine Learning and AI*** {#ai}

ML handler i bund og grund om at få computere til at lære af data, uden at vi behøver at programmere dem direkte til at udføre specifikke opgaver.

**ML bruges i mange applikationer, som vi anvender dagligt**: fx:
* anbefalingssystemer på streamingservices,
* selvkørende biler,
* ...

I stedet for at programmere alle regler selv--**`if`** *`something`* **`then`** *`do` `this`*, **`else`** *`this`*--kan vi give modellen data, så den kan "lære" mønstre og træffe beslutninger baseret på de data.

Machine Learning opdeles typisk i tre hovedtyper:

  * **Supervised** learning (superviseret læring)
  * **Unsupervised** learning (usuperviseret læring)
  * **Reinforcement** learning (forstærkningslæring)

## Supervised Machine Learning [*en*] {#sml}

Faucibus accumsan ipsum et tempor fringilla placerat nisl ultrices. Suscipit dignissim finibus platea efficitur inceptos consequat orci sem. 

```{r}
#| child: "workshop/sml.qmd"
```


## Natural Language Processing [*da*] {#nlp}

Faucibus accumsan ipsum et tempor fringilla placerat nisl ultrices. Suscipit dignissim finibus platea efficitur inceptos consequat orci sem. 

```{r}
#| child: "workshop/nlp.qmd"
```

## Naive Bayes [*da*] {#nb}

Faucibus accumsan ipsum et tempor fringilla placerat nisl ultrices. Suscipit dignissim finibus platea efficitur inceptos consequat orci sem. 

```{r}
#| child: "workshop/nb.qmd"
```

## Clustering techniques [*en*] {#ml-exp} 

```{r}
#| child: "workshop/ml-exp.qmd"
```

## LDA [*da*] {#lda}

Faucibus accumsan ipsum et tempor fringilla placerat nisl ultrices. Suscipit dignissim finibus platea efficitur inceptos consequat orci sem. 

::: {.column-margin style="color: #222;"}

Hi! I'm a side note ........................................ ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, !

:::

```{r}
#| child: "workshop/lda.qmd"
```



















# ***Programming***  {#programming}

Libero sociosqu lacinia nibh; potenti elit viverra. Senectus fames fringilla praesent nascetur lacus lobortis dui tortor. Felis ridiculus lorem senectus convallis conubia nec phasellus nisi. Potenti sodales rhoncus et penatibus auctor morbi erat augue iaculis. Egestas dictumst phasellus class nec facilisis sapien lectus maximus iaculis. Quam nascetur fusce vivamus proin dolor; magna tempus curae.

## Python [*da*] {#python}

Faucibus accumsan ipsum et tempor fringilla placerat nisl ultrices. Suscipit dignissim finibus platea efficitur inceptos consequat orci sem. 

```{r}
#| child: "workshop/python.qmd"
```

## R [*da*] {#r}

Faucibus accumsan ipsum et tempor fringilla placerat nisl ultrices. Suscipit dignissim finibus platea efficitur inceptos consequat orci sem. 

```{r}
#| child: "workshop/r-intro.qmd"
```

## Quarto [*da*] {#quarto}

Faucibus accumsan ipsum et tempor fringilla placerat nisl ultrices. Suscipit dignissim finibus platea efficitur inceptos consequat orci sem. 

```{r}
#| child: "workshop/quarto.qmd"
```

## CommandLine and file organization [*da*] {#cli}

Faucibus accumsan ipsum et tempor fringilla placerat nisl ultrices. Suscipit dignissim finibus platea efficitur inceptos consequat orci sem. 

```{r}
#| child: "workshop/cli-file.qmd"
```

## Git [*da*] {#git}

Faucibus accumsan ipsum et tempor fringilla placerat nisl ultrices. Suscipit dignissim finibus platea efficitur inceptos consequat orci sem. 

```{r}
#| child: "workshop/git.qmd"
```

## Plain text [*da*] {#plaintext}

Faucibus accumsan ipsum et tempor fringilla placerat nisl ultrices. Suscipit dignissim finibus platea efficitur inceptos consequat orci sem. 

```{r}
#| child: "workshop/plaintext.qmd"
```

## API's [*da*] {#api}

Faucibus accumsan ipsum et tempor fringilla placerat nisl ultrices. Suscipit dignissim finibus platea efficitur inceptos consequat orci sem. 

```{r}
#| child: "workshop/api.qmd"
```



















::: {.cell}

```{=html}
<style>
  /* Styling for h2 headers with fold icons */
  main h2 {
    cursor: pointer;
    color: #333;
  }

  main h2 .fa-circle-chevron-right, main h2 .fa-angle-down {
    margin-right: 8px; /* Space between icon and heading text */
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    // Select all Section headers (h2) within the main content
    const sections = document.querySelectorAll("main h2");

    sections.forEach(section => {
      section.style.cursor = "pointer";

      // Add the initial icon (right chevron inside a circle) to the header
      const icon = document.createElement("i");
      icon.classList.add("fa-solid", "fa-circle-chevron-right");
      section.prepend(icon);

      // Collect all elements under this Section until the next h2 or h1
      let nextSibling = section.nextElementSibling;
      const sectionContent = [];

      while (nextSibling && nextSibling.tagName !== "H2" && nextSibling.tagName !== "H1") {
        sectionContent.push(nextSibling);
        nextSibling = nextSibling.nextElementSibling;
      }

      // Hide the Section content by default
      sectionContent.forEach(element => element.style.display = "none");

      // Toggle visibility of the Section content and icon on click
      section.addEventListener("click", (event) => {
        event.stopPropagation(); // Prevents toggling the parent
        const isVisible = sectionContent[0].style.display === "block";
        
        // Toggle content visibility
        sectionContent.forEach(element => {
          element.style.display = isVisible ? "none" : "block";
        });
        
        // Update the icon
        icon.classList.toggle("fa-circle-chevron-right", isVisible);
        icon.classList.toggle("fa-angle-down", !isVisible);
      });
    });
  });
</script>
```
:::
