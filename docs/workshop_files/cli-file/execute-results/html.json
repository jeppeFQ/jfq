{
  "hash": "a6ba8021110aa2b4786967c517a01a9b",
  "result": {
    "engine": "knitr",
    "markdown": "\n### Terminalen: *interaktion med computeren (og filsystemet)*\n\n**Terminalen** er det, der giver os adgang til **kommandolinjegrænsefladen** (CLI). Selvom den har miste meget af sin position blandt den gennemsnitlige computer-bruger---grundet **grafiske brugergrænseflader** (GUI)---er den fortsat en *meget effektiv* måde at interagere med computeren. Særligt på Unix-systemer.\n\n#### Shell \n\nNår vi anvender CLI, bruger vi en `shell`, der er et program til fortolkning af kommandoer. De to mest almindelige shell-programmer er:\n\n- **Bash** (Bourne Again Shell): Standard på mange Linux-distributioner og tidligere på macOS.\n- **Zsh** (Z Shell): Standard på macOS fra og med version 10.15 Catalina.\n\n### Fil*organisering*\n\nReferer til hvordan vores filer (**data**) og mapper (**directories**) er struktureret og lagret på vores **lagringsenhed** (harddisk, SSD, ekstern enhed, ...). \n\nDenne struktur bestemmer hvordan data **hentes og gemmes**, og gør det muligt for brugeren eller programmer at finde, tilgå og anvende filer. \n\nEn mappe (**directory**) er en *container*, som indeholder filer og andre mapper, og danner grundlaget for en **hierakisk struktur** (tree-/**træstruktur**). Opbygningen er med afsæt i en root-mappe (ikke den egentlige `root`-mappe, men brugerens hjemmemappe), som indeholder undermapper og filer. Herfra indeholder hver undermappe andre undermapper og filer, hvilket danner et træ af mapper og filer, hvis vi zoomer ud. Med andre ord, (træ-)hierakiet giver en logisk og *navigérbar organisering* på computeren. \n\n- **root directory**: I Unix-systemer (MacOS, Linux) betegnes den `/`. I Windows er der en root-mappe i hvert drev, betegnet med bogstavet for drevet, fx `C:\\`\n\n- **Undermapper**: Mapper, der findes inde i andre mapper, fx `/home/user/documents` eller `C:\\Users\\Username\\Documents`.\n\n\n\n### Et filsystem \n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n::: {.smaller}\n\n**UNIX** (MacOS, Linux) \n\n```\n/\n├── bin                  # Vigtige eksekverbare systemfiler\n├── sbin                 # Systemadministrative eksekverbare filer\n├── etc                  # Systemkonfigurationsfiler\n├── home                 # Brugermapper (personlige filer)\n│   └── jeppe            # Brugeren \"jeppe\"'s hjemmemappe\n│       ├── Documents    # jeppes dokumenter\n│       ├── Downloads    # jeppes downloadede filer\n│       ├── Music        # jeppes musikfiler\n│       ├── Pictures     # jeppes billeder\n│       ├── Videos       # jeppes videofiler\n│       └── Projects     # Personlige kodeprojekter og scripts\n│           └── snake_game\n│               ├── main.py # Python-kode til et snake-spil\n│               └── assets  # Grafikfiler til spillet\n├── root                 # Superbrugerens hjemmemappe\n├── usr                  # Bruger- og systemprogrammer\n│   ├── bin              # Programmer installeret til brugere\n│   ├── lib              # Systemets biblioteker\n│   └── local            # Lokalt installerede programmer\n├── var                  # Variable data som logs og mails\n│   ├── log              # Systemets logfiler\n│   └── tmp              # Midlertidige filer\n├── tmp                  # Midlertidige filer (slettes ved genstart)\n├── dev                  # Systemets enheder som harddiske og terminaler\n├── mnt                  # Monteringspunkt for midlertidige enheder\n│   └── usb-drive        # En USB-nøgle monteret her\n└── media                # Monteringspunkt for eksterne enheder\n    └── jeppe-usb        # jeppes eksterne harddisk hvis monteret\n```\n:::\n:::\n\n::: {.column width=\"50%\"}\n::: {.smaller}\n\n**Windows**\n\n```\nC:\\\n├── Program Files            # Programmer installeret for alle brugere\n├── Program Files (x86)      # 32-bit versioner (på 64-bit systemer)\n├── Users                    # Brugermapper (til hver bruger på systemet)\n│   └── jeppe                # Brugeren \"jeppe\"'s hjemmemappe\n│       ├── Documents        # jeppes dokumenter\n│       ├── Downloads        # jeppes downloadede filer\n│       ├── Music            # jeppes musikfiler\n│       ├── Pictures         # jeppes billeder\n│       ├── Videos           # jeppes videofiler\n│       ├── Desktop          # Filer og genveje på jeppes skrivebord\n│       ├── AppData          # jeppes personlige app-data og indstillinger\n│       └── Projects         # Personlige kodeprojekter og scripts\n│           └── snake_game\n│               ├── main.py  # Python-kode til et snake-spil\n│               └── assets   # Grafikfiler til spillet\n├── Windows                  # Operativsystemets filer\n│   ├── System32             # Vigtige systemfiler \n│   └── Temp                 # Midlertidige filer, der bruges af systemet\n├── ProgramData              # Data, der deles af applikationer på systemet\n└── Temp                     # Midlertidige filer\n```\n:::\n:::\n\n::::\n\n\n#### *Navigation*: Absolutte og relative stier \n\n- **Absolut sti**: En sti, der beskriver placeringen af en fil eller mappe i forhold til root-mappen. Fx `/home/user/documents/projekt.docs` eller `C:\\Users\\Username\\Documents\\projekt.docx`.\n\n- **Relativ sti**: En sti, der beskriver placeringen af en fil eller mappe i forhold til den nuværende mappe. Hvis vi er i mappen `/home/user`, kan vi nøjes med den relative sti `documents/projekt.docx` for at henvise til filen.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nls # <1>\n     ls -l # <1>\n     ls -a # <1>\n\ncd # <2>\n     cd .. # <2>\n     cd ~  # <2>\n     cd -  # <2>\n\ntouch filnavn.type # <3>\n\nmkdir ny-mappe # <4>\n\nrm filnavn.type # <5>\n\nrm -r ny-mappe # <6>\n```\n:::\n\n\n1. Lister filer og mapper i den aktuelle mappe. `ls -l` lister filer og mapper med detaljer (fx rettigheder, størrelse). `ls -a` viser alle filer, inklusiv skjulte filer.\n2. Skifter til en anden mappe. `cd ..` går én mappe op/tilbage (til forældermappen). `cd ~` går til brugerens hjemmemappe. `cd -` skifter tilbage til den seneste mappe, du var i.\n3. Opretter en ny, tom fil med angivet navn og type.\n4. Opretter en ny mappe med det angivne navn.\n5. Sletter en fil med det angivne navn.\n6. Sletter en mappe og alt indholdet i den rekursivt.\n\n> Er navigation med CML nødvendigt? **Nej.** Men det kan give et flow, hvis vi primært laver kodearbejde da terminalen kan tilgås \"indeni\" programmer som `Rstudio` eller `vscode`. Men uanset om man bruger **mus** eller **tastetur** til at navigere på sin computer, er det vigtigt at vide, hvordan filer er organiseret, hvis man har en computer-baseret stilling. \n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}