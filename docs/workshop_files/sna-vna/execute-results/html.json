{
  "hash": "6f33ed3fcbd3ab049741a19173e1fd12",
  "result": {
    "engine": "knitr",
    "markdown": "\n\n\n### Case: Social networks\n\n::: {.panel-tabset}\n\n## <i class=\"fa-brands fa-r-project\" style=\"color: #276DC3;\"></i> R packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(segregation)\n```\n:::\n\n\n## <i class=\"fa-brands fa-python\" style=\"color: #3776AB;\"></i> Python \n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport session_info\n```\n:::\n\n\n:::\n\n::: {.panel-tabset}\n\n## <i class=\"fa-brands fa-r-project\" style=\"color: #276DC3;\"></i> R\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1+1\n```\n:::\n\n\n## <i class=\"fa-brands fa-python\" style=\"color: #3776AB;\"></i> Python\n\n\n::: {.cell}\n\n```{.python .cell-code}\nmat_friendship = pd.read_table(\"https://www.dropbox.com/s/0saiulir3pr566k/ELfriend.dat?dl=1\", delim_whitespace=True, header=None) \nmat_advice = pd.read_table(\"https://www.dropbox.com/s/apq42n1grim23k9/ELadv.dat?dl=1\", delim_whitespace=True, header=None) \nmat_work = pd.read_table(\"https://www.dropbox.com/s/dliz0sd7or8tv01/ELwork.dat?dl=1\", delim_whitespace=True, header=None)\n```\n:::\n\n\n## <i class=\"fa-solid fa-gears\"></i> `Session Info`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndevtools::session_info(pkgs = \"attached\", info = c(\"platform\", \"packages\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.2.1 (2022-06-23)\n os       macOS Big Sur ... 10.16\n system   x86_64, darwin17.0\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/Copenhagen\n date     2024-11-04\n pandoc   3.3 @ /usr/local/bin/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version date (UTC) lib source\n dplyr       * 1.1.4   2023-11-17 [1] CRAN (R 4.2.0)\n forcats     * 1.0.0   2023-01-29 [1] CRAN (R 4.2.0)\n ggplot2     * 3.5.1   2024-04-23 [1] CRAN (R 4.2.1)\n lubridate   * 1.9.3   2023-09-27 [1] CRAN (R 4.2.0)\n purrr       * 1.0.2   2023-08-10 [1] CRAN (R 4.2.0)\n readr       * 2.1.5   2024-01-10 [1] CRAN (R 4.2.1)\n segregation * 1.1.0   2023-12-02 [1] CRAN (R 4.2.0)\n stringr     * 1.5.1   2023-11-14 [1] CRAN (R 4.2.0)\n tibble      * 3.2.1   2023-03-20 [1] CRAN (R 4.2.0)\n tidyr       * 1.3.1   2024-01-24 [1] CRAN (R 4.2.1)\n tidyverse   * 2.0.0   2023-02-22 [1] CRAN (R 4.2.0)\n\n [1] /Library/Frameworks/R.framework/Versions/4.2/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nsession_info.show()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n-----\nnumpy               1.24.3\npandas              2.0.3\nsession_info        1.0.0\n-----\nPython 3.8.16 | packaged by conda-forge | (default, Feb  1 2023, 16:13:45) [Clang 14.0.6 ]\nmacOS-10.16-x86_64-i386-64bit\n-----\nSession information updated at 2024-11-04 13:54\n```\n\n\n:::\n:::\n\n\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Visualizing the stylized population network](../images/gephi-network-clean.svg){#fig-svg-example fig-pos='H' width=100% height=auto}\n:::\n:::\n\n\n<button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">see figure in full screen</button>\n\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\"><div class=\"modal-dialog modal-dialog-centered p-8\" style=\"max-width: 90%\"><div class=\"modal-content\">\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/gephi-network-clean.svg){width=100%}\n:::\n:::\n\n\n</div></div></div>",
    "supporting": [
      "sna-vna_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}